// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using pax.dsstats.dbng;

#nullable disable

namespace pax.dsstats.dbng.Migrations
{
    [DbContext(typeof(ReplayContext))]
    partial class ReplayContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.3");

            modelBuilder.Entity("pax.dsstats.dbng.Player", b =>
                {
                    b.Property<int>("PlayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("PlayerId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Players");
                });

            modelBuilder.Entity("pax.dsstats.dbng.PlayerUpgrade", b =>
                {
                    b.Property<int>("PlayerUpgradeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Gameloop")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UpgradeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PlayerUpgradeId");

                    b.HasIndex("UpgradeId");

                    b.ToTable("PlayerUpgrades");
                });

            modelBuilder.Entity("pax.dsstats.dbng.Replay", b =>
                {
                    b.Property<int>("ReplayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Bunker")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cannon")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CommandersTeam1")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CommandersTeam2")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("DefaultFilter")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Downloads")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Duration")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("GameMode")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("GameTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("Maxkillsum")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Maxleaver")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Middle")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.Property<int>("Minarmy")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Minincome")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Minkillsum")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Objective")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("Playercount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ReplayHash")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT")
                        .IsFixedLength();

                    b.Property<string>("RunnerTeamName")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("Views")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WinnerTeam")
                        .HasColumnType("INTEGER");

                    b.Property<string>("WinnerTeamName")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("ReplayId");

                    b.HasIndex("ReplayHash")
                        .IsUnique();

                    b.HasIndex("GameTime", "GameMode");

                    b.HasIndex("GameTime", "GameMode", "DefaultFilter");

                    b.ToTable("Replays");
                });

            modelBuilder.Entity("pax.dsstats.dbng.ReplayPlayer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("APM")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Army")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Clan")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("Downloads")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Duration")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GamePos")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Income")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsUploader")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Kills")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OppRace")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlayerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlayerResult")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Race")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Refineries")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<int>("ReplayId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Team")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TierUpgrades")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<int>("UpgradesSpent")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Views")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.HasIndex("Race");

                    b.HasIndex("ReplayId");

                    b.HasIndex("Race", "OppRace");

                    b.ToTable("ReplayPlayers");
                });

            modelBuilder.Entity("pax.dsstats.dbng.Spawn", b =>
                {
                    b.Property<int>("SpawnId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ArmyValue")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GasCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Income")
                        .HasColumnType("INTEGER");

                    b.Property<int>("KilledValue")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ReplayPlayerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UpgradeSpent")
                        .HasColumnType("INTEGER");

                    b.HasKey("SpawnId");

                    b.HasIndex("ReplayPlayerId");

                    b.ToTable("Spawns");
                });

            modelBuilder.Entity("pax.dsstats.dbng.SpawnUnit", b =>
                {
                    b.Property<int>("SpawnUnitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PosX")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PosY")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SpawnId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UnitId")
                        .HasColumnType("INTEGER");

                    b.HasKey("SpawnUnitId");

                    b.HasIndex("SpawnId");

                    b.HasIndex("UnitId");

                    b.ToTable("SpawnUnits");
                });

            modelBuilder.Entity("pax.dsstats.dbng.Unit", b =>
                {
                    b.Property<int>("UnitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Commander")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cost")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.HasKey("UnitId");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("pax.dsstats.dbng.Upgrade", b =>
                {
                    b.Property<int>("UpgradeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cost")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("UpgradeId");

                    b.ToTable("Upgrades");
                });

            modelBuilder.Entity("ReplayPlayerUpgrade", b =>
                {
                    b.Property<int>("ReplayPlayersId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UpgradesUpgradeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ReplayPlayersId", "UpgradesUpgradeId");

                    b.HasIndex("UpgradesUpgradeId");

                    b.ToTable("ReplayPlayerUpgrade");
                });

            modelBuilder.Entity("pax.dsstats.dbng.PlayerUpgrade", b =>
                {
                    b.HasOne("pax.dsstats.dbng.Upgrade", "Upgrade")
                        .WithMany()
                        .HasForeignKey("UpgradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Upgrade");
                });

            modelBuilder.Entity("pax.dsstats.dbng.ReplayPlayer", b =>
                {
                    b.HasOne("pax.dsstats.dbng.Player", "Player")
                        .WithMany("ReplayPlayers")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pax.dsstats.dbng.Replay", "Replay")
                        .WithMany("Players")
                        .HasForeignKey("ReplayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");

                    b.Navigation("Replay");
                });

            modelBuilder.Entity("pax.dsstats.dbng.Spawn", b =>
                {
                    b.HasOne("pax.dsstats.dbng.ReplayPlayer", null)
                        .WithMany("Spawns")
                        .HasForeignKey("ReplayPlayerId");
                });

            modelBuilder.Entity("pax.dsstats.dbng.SpawnUnit", b =>
                {
                    b.HasOne("pax.dsstats.dbng.Spawn", null)
                        .WithMany("Units")
                        .HasForeignKey("SpawnId");

                    b.HasOne("pax.dsstats.dbng.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("ReplayPlayerUpgrade", b =>
                {
                    b.HasOne("pax.dsstats.dbng.ReplayPlayer", null)
                        .WithMany()
                        .HasForeignKey("ReplayPlayersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pax.dsstats.dbng.Upgrade", null)
                        .WithMany()
                        .HasForeignKey("UpgradesUpgradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("pax.dsstats.dbng.Player", b =>
                {
                    b.Navigation("ReplayPlayers");
                });

            modelBuilder.Entity("pax.dsstats.dbng.Replay", b =>
                {
                    b.Navigation("Players");
                });

            modelBuilder.Entity("pax.dsstats.dbng.ReplayPlayer", b =>
                {
                    b.Navigation("Spawns");
                });

            modelBuilder.Entity("pax.dsstats.dbng.Spawn", b =>
                {
                    b.Navigation("Units");
                });
#pragma warning restore 612, 618
        }
    }
}
