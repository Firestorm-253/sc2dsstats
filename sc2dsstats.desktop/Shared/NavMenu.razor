@using System.ComponentModel
@using sc2dsstats.lib.Data
@using sc2dsstats.decode
@using sc2dsstats.decode.Service
@using sc2dsstats.desktop.Service
@using sc2dsstats.lib.Db
@using sc2dsstats.lib.Models
@inject DSoptions _options
@inject DSReplayContext _context
@inject Status _status
@implements IDisposable

<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">sc2dsstats.desktop</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="charts">
                <span class="oi oi-bar-chart" aria-hidden="true"></span> Charts
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="builds">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Builds
            </NavLink>
        </li>

        <li class="nav-item px-3">
            <NavLink class="nav-link" href="db">
                <span class="oi oi-list" aria-hidden="true"></span> Database
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="scan">
                @if (UploadStatus == UploadStatus.Uploading)
                {
                    <span class="oi spinner-grow spinner-grow-sm text-success"></span> @("Scan")
                }
                else if (UploadStatus == UploadStatus.UploadSuccess)
                {
                    <span class="oi oi-circle-check text-success">&nbsp;</span> @("Scan")
                }
                else if (UploadStatus == UploadStatus.UploadFailed)
                {
                    <span class="oi oi-circle-x text-danger">&nbsp;</span> @("Scan")
                }
                else
                {
                    <span class="oi oi-project">&nbsp;</span> @("Scan")
                }
            </NavLink>
            <div class="@ProgbarClass ml-2" id="div_progbar">
                <div class="progress">
                    <div class="progress-bar progress-bar-striped" role="progressbar"
                         style="width: @((int)Done)%" aria-valuenow=@Done
                         aria-valuemin="0" aria-valuemax="100">
                    </div>
                </div>
            </div>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="bestbuild">
                <span class="oi oi-zoom-in" aria-hidden="true"></span> A-Move Simulator
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="https://www.pax77.org/dsweb/chart" target="_blank">
                <span class="oi oi-external-link" aria-hidden="true"></span> World Charts
            </NavLink>
            <div style="margin-top: -19px !important; margin-left: 60px !important;"><font size="1">external link</font></div>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link disabled">
                <h5><span class="badge badge-info">@DSdata.DesktopStatus.DatabaseReplays Replays loaded</span></h5>
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="configng">
                <span class="oi oi-wrench" aria-hidden="true"></span> Settings
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="info">
                <span class="oi oi-info" aria-hidden="true"></span> Info
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <br />
            <br />
            <div class="row">
                <a class="mr-2" href="https://github.com/ipax77/sc2dsstats" title="GitHub fan project: Create charts from your own DS replays">
                    <img alt="sc2dsstats" height="32" longdesc="https://github.com/ipax77/sc2dsstats" src="_content/sc2dsstats.shared/images/GitHub-Mark-Light-64px47.png" width="32" />
                </a>
                <a class="mr-2" href="https://www.twitch.tv/ipax77">
                    <img alt="Twitch" class="auto-style6" height="32" longdesc="https://www.twitch.tv/ipax77" src="_content/sc2dsstats.shared/images/GlitchBadge_White_64px.png" width="32" />
                </a>
                <a href="https://www.youtube.com/channel/UCMwOnIzcuoSHGFYqVA6wJbQ">
                    <img alt="YouTube" class="auto-style6" height="30" longdesc="https://www.youtube.com/channel/UCMwOnIzcuoSHGFYqVA6wJbQ" src="_content/sc2dsstats.shared/images/yt_icon_mono_dark.png" width="51" />
                </a>
            </div>
        </li>
        <li>
            <br />
            <a href="https://github.com/ipax77/sc2dsstats" target="_blank">
                <span class="nav-link">this()</span>
            </a>
        </li>
    </ul>
</div>
<div class="ml-3">
    <br />
    <br />
    <span class="badge badge-dark">v @DSdata.DesktopVersion</span>
</div>

@code {
    private bool collapseNavMenu = true;
    string ProgbarClass = "d-none";
    string ScanClass = "oi oi-plus";
    float Done = 0;
    UploadStatus UploadStatus = UploadStatus.UploadDone;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override void OnInitialized()
    {
        _status.StatusChanged += StatusUpdate;
    }

    async void UpdateMe()
    {
        await InvokeAsync(() => StateHasChanged());
    }

    void StatusUpdate(object sender, EventArgs e)
    {
        StatusChangedEventArgs arg = e as StatusChangedEventArgs;
        if (_options.Decoding)
        {
            UploadStatus = arg.UploadStatus;
            ProgbarClass = "";
            ScanClass = "oi oi-list-rich spinner-border spinner-border-sm";
            Done = arg.Done;
        } else
        {
            ProgbarClass = "d-none";
            ScanClass = "oi oi-plus";
        }

        UpdateMe();
    }

    public void Dispose()
    {
        _status.StatusChanged -= StatusUpdate;
    }
}
