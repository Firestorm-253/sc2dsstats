@using sc2dsstats.lib.Data
@using sc2dsstats.desktop.Service

<div class="modal @ModalClass" tabindex="-1" role="dialog" id="delModal" style="display:@ModalDisplay">
    <div class="modal-dialog">
        <div class="modal-content">

            <!-- Modal Header -->
            <div class="modal-header">
                <h4 class="modal-title">Upload statistics</h4>
            </div>

            <!-- Modal body -->
            <div class="modal-body" @onclick:stopPropagation>
                <h4>Do you allow to upload your anonymized replay stats?</h4>
                <label>
                    To improve this application it would be very nice if the statistics were uploaded from time to time.
                    <br />
                    All player names (including yours) will be anonymized before sending. Do you agree that your anonymized DS-replay data will be used at <a href="https://www.pax77.org/dsweb">https://www.pax77.org/dsweb</a> to generate global charts?
                    <br />
                    You can remove the Upload credential at any time at <a href="config">Config</a>
                </label>
            </div>

            <!-- Modal footer -->
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary mr-3" data-dismiss="modal" @onclick="@AllowUpload">Yes</button>
                <button type="button" class="btn btn-primary mr-3" data-dismiss="modal" @onclick="@DeclineUpload">No</button>
            </div>

        </div>
    </div>
</div>
@if (_Show)
{
<div class="modal-backdrop fade show"></div>
}


@code {
    private bool _Show = false;

    public string ModalDisplay = "none;";
    public string ModalClass = "";

    public void AllowUpload()
    {
        DSdata.Config.Uploadcredential = true;
        Status.SaveConfig();
        ModalDisplay = "none;";
        ModalClass = "";
        _Show = false;
        StateHasChanged();
    }

    public void DeclineUpload()
    {
        DSdata.Config.Uploadcredential = false;
        DSdata.Config.MMDeleted = DateTime.UtcNow;
        Status.SaveConfig();
        ModalDisplay = "none;";
        ModalClass = "";
        _Show = false;
        StateHasChanged();
    }
    public void Show(bool isManual = false)
    {
        if (isManual == true || (DateTime.UtcNow - DSdata.Config.LastUpload).TotalDays > 30)
        {
            ModalDisplay = "block;";
            ModalClass = "show";
            _Show = true;
        }
        else
            return;
        InvokeAsync(() => StateHasChanged());
    }
}