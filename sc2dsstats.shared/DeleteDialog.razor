@using sc2dsstats.lib.Db
@using sc2dsstats.lib.Data
@inject DSoptions _options
@inject DSReplayContext _context

@if (_Show)
{
<div class="modal fade show d-block" id="delModal" @onclick="Show">
    <div class="modal-dialog">
        <div class="modal-content">

            <!-- Modal Header -->
            <div class="modal-header">
                <h4 class="modal-title">Deleting Replay</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>

            <!-- Modal body -->
            <div class="modal-body" @onclick:stopPropagation>
                Do you realy want to delete this replay?
                <button type="button" class="btn btn-dark" data-dismiss="modal" @onclick="@(async => { Delete(); })">YES</button>
            </div>

            <!-- Modal footer -->
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal" @onclick="Show">Close</button>
            </div>

        </div>
    </div>
</div>
<div class="modal-backdrop fade show"></div>
<span class="oi oi-project"></span>
}

@code {
    [Parameter]
    public int ID { get; set; } = 0;

    private bool _Show = false;

    async Task Delete()
    {
        _options.Replay = null;
        _Show = !_Show;
        await InvokeAsync(() => StateHasChanged());
        await DBService.DeleteRep(_context, ID);
    }

    public void Show()
    {
        _Show = !_Show;
        StateHasChanged();
    }

}
