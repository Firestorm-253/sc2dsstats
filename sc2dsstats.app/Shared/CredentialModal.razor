@using sc2dsstats.app.Services
@inject IJSRuntime _js
@inject ReplayService replayService

<!-- Modal -->
<div class="modal fade" id="credentialModal" tabindex="-1" aria-labelledby="replayModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-xl modal-dialog-centered modal-dialog-scrollable modal-fullscreen-xxl-down">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Upload Credential</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
            <p>
            To improve this application it would be very nice if the statistics were uploaded from time to time.
            All player names (including yours) will be anonymized before sending. By clicking Yes you agree that your anonymized DS-replay data will be used at <a class="text-warning" href="https://sc2dsstats.pax77.org">https://sc2dsstats.pax77.org</a> to generate global charts.
            </p>           
            <h5>Do you allow the upload of you anonymized replay-stats?</h5>
            <div class="btn-group">
                <button type="button" class="btn btn-success" @onclick="Yes">Yes</button>
                <button type="button" class="btn btn-danger" @onclick="No">No</button>
            </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>


@code {

    private async void Close()
    {
        await _js.InvokeVoidAsync("ReplayModalClose");
    }

    public void Show()
    {
        _js.InvokeVoidAsync("ReplayModalOpen", "credentialModal");
    }

    void Yes()
    {
        replayService.AppConfig.Config.Uploadcredential = true;
        replayService.SaveConfig();
        Close();
    }

    void No()
    {
        Close();
    }
}
