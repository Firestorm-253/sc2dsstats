// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using sc2dsstats.db;

#nullable disable

namespace sc2dsstats._2022.Server.Migrations
{
    [DbContext(typeof(sc2dsstatsContext))]
    partial class sc2dsstatsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0-rc.2.21480.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("sc2dsstats.db.Breakpoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int>("Army")
                        .HasColumnType("int(11)");

                    b.Property<string>("Breakpoint1")
                        .HasColumnType("longtext")
                        .HasColumnName("Breakpoint");

                    b.Property<string>("DbUnitsString")
                        .HasColumnType("longtext")
                        .HasColumnName("dbUnitsString");

                    b.Property<string>("DbUpgradesString")
                        .HasColumnType("longtext")
                        .HasColumnName("dbUpgradesString");

                    b.Property<string>("DsUnitsString")
                        .HasColumnType("longtext")
                        .HasColumnName("dsUnitsString");

                    b.Property<int>("Gas")
                        .HasColumnType("int(11)");

                    b.Property<int>("Income")
                        .HasColumnType("int(11)");

                    b.Property<int>("Kills")
                        .HasColumnType("int(11)");

                    b.Property<int>("Mid")
                        .HasColumnType("int(11)");

                    b.Property<int?>("PlayerId")
                        .HasColumnType("int")
                        .HasColumnName("PlayerID");

                    b.Property<int>("Tier")
                        .HasColumnType("int(11)");

                    b.Property<int>("Upgrades")
                        .HasColumnType("int(11)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "PlayerId" }, "IX_Breakpoints_PlayerID");

                    b.ToTable("breakpoints", (string)null);
                });

            modelBuilder.Entity("sc2dsstats.db.CommanderName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<int>("sId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CommanderNames");
                });

            modelBuilder.Entity("sc2dsstats.db.DsInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("UnitNamesUpdate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("UpgradeNamesUpdate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("DsInfo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            UnitNamesUpdate = new DateTime(2021, 10, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpgradeNamesUpdate = new DateTime(2021, 10, 31, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("sc2dsstats.db.DsParticipant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Cmdr")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int?>("DsTimeResultId")
                        .HasColumnType("int");

                    b.Property<int?>("DsTimeResultId1")
                        .HasColumnType("int");

                    b.Property<int>("Wins")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "DsTimeResultId" }, "IX_Participants_DsTimeResultId");

                    b.HasIndex(new[] { "DsTimeResultId1" }, "IX_Participants_DsTimeResultId1");

                    b.ToTable("participants", (string)null);
                });

            modelBuilder.Entity("sc2dsstats.db.DsParticipantsValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Cmdr")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("DsTimeResultValuesId")
                        .HasColumnType("int");

                    b.Property<int?>("DsTimeResultValuesId1")
                        .HasColumnType("int");

                    b.Property<bool>("Win")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "DsTimeResultValuesId" }, "IX_DsParticipantsValues_DsTimeResultValuesId");

                    b.HasIndex(new[] { "DsTimeResultValuesId1" }, "IX_DsParticipantsValues_DsTimeResultValuesId1");

                    b.ToTable("dsparticipantsvalues", (string)null);
                });

            modelBuilder.Entity("sc2dsstats.db.Dsplayer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int>("Army")
                        .HasColumnType("int(11)")
                        .HasColumnName("ARMY");

                    b.Property<int?>("DsreplayId")
                        .HasColumnType("int(11)")
                        .HasColumnName("DSReplayID");

                    b.Property<sbyte>("Gas")
                        .HasColumnType("tinyint(3)")
                        .HasColumnName("GAS");

                    b.Property<int>("Income")
                        .HasColumnType("int(11)")
                        .HasColumnName("INCOME");

                    b.Property<int>("Killsum")
                        .HasColumnType("int(11)")
                        .HasColumnName("KILLSUM");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("NAME");

                    b.Property<byte>("Opprace")
                        .HasColumnType("tinyint unsigned");

                    b.Property<int>("Pduration")
                        .HasColumnType("int(11)")
                        .HasColumnName("PDURATION");

                    b.Property<int?>("PlayerNameId")
                        .HasColumnType("int");

                    b.Property<sbyte>("Pos")
                        .HasColumnType("tinyint(3)")
                        .HasColumnName("POS");

                    b.Property<byte>("Race")
                        .HasColumnType("tinyint unsigned");

                    b.Property<sbyte>("Realpos")
                        .HasColumnType("tinyint(3)")
                        .HasColumnName("REALPOS");

                    b.Property<sbyte>("Team")
                        .HasColumnType("tinyint(3)")
                        .HasColumnName("TEAM");

                    b.Property<bool>("Win")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("WIN");

                    b.Property<bool>("isPlayer")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("PlayerNameId");

                    b.HasIndex(new[] { "DsreplayId" }, "IX_DSPlayers_DSReplayID");

                    b.HasIndex(new[] { "Name" }, "IX_DSPlayers_NAME");

                    b.HasIndex(new[] { "Race" }, "IX_DSPlayers_RACE");

                    b.HasIndex(new[] { "Race", "Opprace" }, "IX_DSPlayers_RACE_OPPRACE");

                    b.HasIndex(new[] { "Race", "Opprace", "isPlayer" }, "IX_DSPlayers_RACE_OPPRACE_PLAYER");

                    b.HasIndex(new[] { "Race", "isPlayer" }, "IX_DSPlayers_RACE_PLAYER");

                    b.ToTable("dsplayers", (string)null);
                });

            modelBuilder.Entity("sc2dsstats.db.DsPlayerName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<Guid>("AppId")
                        .HasColumnType("char(36)");

                    b.Property<string>("AppVersion")
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.Property<Guid>("DbId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Hash")
                        .HasMaxLength(64)
                        .HasColumnType("char(64)")
                        .IsFixedLength();

                    b.Property<DateTime>("LatestReplay")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("LatestUpload")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<bool>("NamesMapped")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("TotlaReplays")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppId");

                    b.HasIndex("DbId");

                    b.HasIndex("Hash");

                    b.HasIndex("Name");

                    b.ToTable("DsPlayerNames");
                });

            modelBuilder.Entity("sc2dsstats.db.Dsreplay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int>("Bunker")
                        .HasColumnType("int");

                    b.Property<int>("Cannon")
                        .HasColumnType("int");

                    b.Property<bool>("DefaultFilter")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Duration")
                        .HasColumnType("int(11)")
                        .HasColumnName("DURATION");

                    b.Property<byte>("Gamemode")
                        .HasColumnType("tinyint unsigned");

                    b.Property<DateTime>("Gametime")
                        .HasMaxLength(6)
                        .HasColumnType("datetime")
                        .HasColumnName("GAMETIME");

                    b.Property<string>("Hash")
                        .HasMaxLength(32)
                        .HasColumnType("char(32)")
                        .HasColumnName("HASH")
                        .IsFixedLength();

                    b.Property<bool>("Isbrawl")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("ISBRAWL");

                    b.Property<int>("Maxkillsum")
                        .HasColumnType("int(11)")
                        .HasColumnName("MAXKILLSUM");

                    b.Property<int>("Maxleaver")
                        .HasColumnType("int(11)")
                        .HasColumnName("MAXLEAVER");

                    b.Property<decimal?>("Mid1")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal?>("Mid2")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("Minarmy")
                        .HasColumnType("int(11)")
                        .HasColumnName("MINARMY");

                    b.Property<int>("Minincome")
                        .HasColumnType("int(11)")
                        .HasColumnName("MININCOME");

                    b.Property<int>("Minkillsum")
                        .HasColumnType("int(11)")
                        .HasColumnName("MINKILLSUM");

                    b.Property<int>("Objective")
                        .HasColumnType("int(11)")
                        .HasColumnName("OBJECTIVE");

                    b.Property<sbyte>("Playercount")
                        .HasColumnType("tinyint(3)")
                        .HasColumnName("PLAYERCOUNT");

                    b.Property<string>("Replay")
                        .HasColumnType("varchar(95)")
                        .HasColumnName("REPLAY");

                    b.Property<string>("Replaypath")
                        .HasColumnType("varchar(95)")
                        .HasColumnName("REPLAYPATH");

                    b.Property<sbyte>("Reported")
                        .HasColumnType("tinyint(3)")
                        .HasColumnName("REPORTED");

                    b.Property<DateTime>("Upload")
                        .HasMaxLength(6)
                        .HasColumnType("datetime");

                    b.Property<string>("Version")
                        .HasColumnType("longtext")
                        .HasColumnName("VERSION");

                    b.Property<sbyte>("Winner")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("WINNER");

                    b.HasKey("Id");

                    b.HasIndex("Gametime");

                    b.HasIndex("Gametime", "DefaultFilter");

                    b.HasIndex(new[] { "Hash" }, "IX_DSReplays_HASH");

                    b.HasIndex(new[] { "Replay" }, "IX_DSReplays_REPLAY");

                    b.HasIndex(new[] { "Replaypath" }, "IX_DSReplays_REPLAYPATH");

                    b.ToTable("dsreplays", (string)null);
                });

            modelBuilder.Entity("sc2dsstats.db.DSRestPlayer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Data")
                        .HasColumnType("int");

                    b.Property<string>("Json")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("LastRep")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("LastUpload")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<string>("Version")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("DSRestPlayers");
                });

            modelBuilder.Entity("sc2dsstats.db.DsTimeResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Army")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Cmdr")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<decimal>("Duration")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Kills")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("MVP")
                        .HasColumnType("int");

                    b.Property<string>("Opp")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("Player")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Timespan")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Wins")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Cmdr");

                    b.HasIndex("Opp");

                    b.HasIndex("Player");

                    b.HasIndex("Timespan");

                    b.HasIndex("Timespan", "Cmdr");

                    b.HasIndex("Timespan", "Cmdr", "Opp");

                    b.HasIndex("Timespan", "Cmdr", "Player");

                    b.HasIndex("Timespan", "Cmdr", "Opp", "Player");

                    b.ToTable("DsTimeResults");
                });

            modelBuilder.Entity("sc2dsstats.db.DsTimeResultValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Army")
                        .HasColumnType("int");

                    b.Property<string>("Cmdr")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<DateTime>("Gametime")
                        .HasMaxLength(100)
                        .HasColumnType("datetime");

                    b.Property<int>("Kills")
                        .HasColumnType("int");

                    b.Property<bool>("MVP")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Opp")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("Player")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Win")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("DsTimeResultValues");
                });

            modelBuilder.Entity("sc2dsstats.db.Dsunit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Bp")
                        .HasColumnType("longtext")
                        .HasColumnName("BP");

                    b.Property<int?>("BreakpointId")
                        .HasColumnType("int")
                        .HasColumnName("BreakpointID");

                    b.Property<int>("Count")
                        .HasColumnType("int(11)");

                    b.Property<int?>("DsplayerId")
                        .HasColumnType("int")
                        .HasColumnName("DSPlayerID");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "BreakpointId" }, "IX_DSUnits_BreakpointID");

                    b.HasIndex(new[] { "DsplayerId" }, "IX_DSUnits_DSPlayerID");

                    b.ToTable("dsunits", (string)null);
                });

            modelBuilder.Entity("sc2dsstats.db.Middle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int>("Gameloop")
                        .HasColumnType("int(11)");

                    b.Property<int?>("ReplayId")
                        .HasColumnType("int")
                        .HasColumnName("ReplayID");

                    b.Property<sbyte>("Team")
                        .HasColumnType("tinyint(3)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ReplayId" }, "IX_Middle_ReplayID");

                    b.ToTable("middle", (string)null);
                });

            modelBuilder.Entity("sc2dsstats.db.UnitName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<int>("sId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UnitNames");
                });

            modelBuilder.Entity("sc2dsstats.db.UpgradeName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<int>("sId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UpgradeNames");
                });

            modelBuilder.Entity("sc2dsstats.db.Breakpoint", b =>
                {
                    b.HasOne("sc2dsstats.db.Dsplayer", "Player")
                        .WithMany("Breakpoints")
                        .HasForeignKey("PlayerId")
                        .HasConstraintName("FK_Breakpoints_DSPlayers_PlayerID");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("sc2dsstats.db.DsParticipant", b =>
                {
                    b.HasOne("sc2dsstats.db.DsTimeResult", "DsTimeResult")
                        .WithMany("Teammates")
                        .HasForeignKey("DsTimeResultId")
                        .HasConstraintName("FK_Participants_DsTimeResults_DsTimeResultId");

                    b.HasOne("sc2dsstats.db.DsTimeResult", "DsTimeResultId1Navigation")
                        .WithMany("Opponents")
                        .HasForeignKey("DsTimeResultId1")
                        .HasConstraintName("FK_Participants_DsTimeResults_DsTimeResultId1");

                    b.Navigation("DsTimeResult");

                    b.Navigation("DsTimeResultId1Navigation");
                });

            modelBuilder.Entity("sc2dsstats.db.DsParticipantsValue", b =>
                {
                    b.HasOne("sc2dsstats.db.DsTimeResultValue", "DsTimeResultValues")
                        .WithMany("Teammates")
                        .HasForeignKey("DsTimeResultValuesId")
                        .HasConstraintName("FK_DsParticipantsValues_DsTimeResultValues_DsTimeResultValuesId");

                    b.HasOne("sc2dsstats.db.DsTimeResultValue", "DsTimeResultValuesId1Navigation")
                        .WithMany("Opponents")
                        .HasForeignKey("DsTimeResultValuesId1")
                        .HasConstraintName("FK_DsParticipantsValues_DsTimeResultValues_DsTimeResultValuesId1");

                    b.Navigation("DsTimeResultValues");

                    b.Navigation("DsTimeResultValuesId1Navigation");
                });

            modelBuilder.Entity("sc2dsstats.db.Dsplayer", b =>
                {
                    b.HasOne("sc2dsstats.db.Dsreplay", "Dsreplay")
                        .WithMany("Dsplayers")
                        .HasForeignKey("DsreplayId")
                        .HasConstraintName("FK_DSPlayers_DSReplays_DSReplayID");

                    b.HasOne("sc2dsstats.db.DsPlayerName", "PlayerName")
                        .WithMany("Dsplayers")
                        .HasForeignKey("PlayerNameId");

                    b.Navigation("Dsreplay");

                    b.Navigation("PlayerName");
                });

            modelBuilder.Entity("sc2dsstats.db.Dsunit", b =>
                {
                    b.HasOne("sc2dsstats.db.Breakpoint", "Breakpoint")
                        .WithMany("Dsunits")
                        .HasForeignKey("BreakpointId")
                        .HasConstraintName("FK_DSUnits_Breakpoints_BreakpointID");

                    b.HasOne("sc2dsstats.db.Dsplayer", "Dsplayer")
                        .WithMany("Dsunits")
                        .HasForeignKey("DsplayerId")
                        .HasConstraintName("FK_DSUnits_DSPlayers_DSPlayerID");

                    b.Navigation("Breakpoint");

                    b.Navigation("Dsplayer");
                });

            modelBuilder.Entity("sc2dsstats.db.Middle", b =>
                {
                    b.HasOne("sc2dsstats.db.Dsreplay", "Replay")
                        .WithMany("Middles")
                        .HasForeignKey("ReplayId")
                        .HasConstraintName("FK_Middle_DSReplays_ReplayID");

                    b.Navigation("Replay");
                });

            modelBuilder.Entity("sc2dsstats.db.Breakpoint", b =>
                {
                    b.Navigation("Dsunits");
                });

            modelBuilder.Entity("sc2dsstats.db.Dsplayer", b =>
                {
                    b.Navigation("Breakpoints");

                    b.Navigation("Dsunits");
                });

            modelBuilder.Entity("sc2dsstats.db.DsPlayerName", b =>
                {
                    b.Navigation("Dsplayers");
                });

            modelBuilder.Entity("sc2dsstats.db.Dsreplay", b =>
                {
                    b.Navigation("Dsplayers");

                    b.Navigation("Middles");
                });

            modelBuilder.Entity("sc2dsstats.db.DsTimeResult", b =>
                {
                    b.Navigation("Opponents");

                    b.Navigation("Teammates");
                });

            modelBuilder.Entity("sc2dsstats.db.DsTimeResultValue", b =>
                {
                    b.Navigation("Opponents");

                    b.Navigation("Teammates");
                });
#pragma warning restore 612, 618
        }
    }
}
